<?phpif (!defined('BASEPATH'))    exit('No direct script access allowed');class Newsletter_abonati extends CI_Controller {    public function __construct() {        parent::__construct();        if (!$this->simpleloginsecure->is_logat("administratori")) {            redirect('admin/login');        }        //$this->output->enable_profiler(TRUE);        $this->load->library('functions');        $this->load->library('table');        $this->load->helper('html');        $this->load->helper('setari');        $this->load->helper('breadcrumbs');        $this->load->helper('text');        $this->load->model('index_page_model', 'indexmodel');        $this->load->model('admin/newsletter_model', 'newsletterm');        $this->load->library('admin/fckeditor');        $this->config->load('table');    }    public function index($data = array()) {        $data["page"] = "newsletter_abonati";                $p = $this->input->post();        if( isset( $p['sterge'] ) ) {            $data = $this->sterge_abonati( $data );        } elseif( isset( $p['salveaza'] ) ) {            $data = $this->update_newsletter( $data );        }        if( $this->session->flashdata('warning')!="" ) {            $data['warning'] = $this->session->flashdata('warning');        }        if( $this->session->flashdata('error')!="" ) {            $data['error'] = $this->session->flashdata('warning');        }        $data["page"] = "newsletter";        $abonati = $this->newsletterm->get_newsletter_abonati();        $this->table->set_template( $this->config->item('table_config') );        $this->table->set_heading('#', 'Nume', 'Adresa de email', 'Activ', 'Optiuni');        $k = 1;        foreach ($abonati as $item) {            $js_titlu = str_replace("'", "`", $item['nume']);            $attrDelete = array(                "onclick" => "return confirm('Esti sigur ca vrei sa stergi abonatul: {$js_titlu}?')"            );            $row = array(                array(                    'data' => '<input type="checkbox" name="id[]" value='. $item['id'] .' />',                    'width' => '20',                ),                array(                    'data' => anchor("admin/newsletter_abonati/editeaza/{$item['id']}", $item['nume']),                    'width' => '150',                ),                $item['email'],                                            $item['activ']==1 ? "DA" : "NU",                array(                    'data' =>                        anchor("admin/newsletter_abonati/sterge/{$item['id']}", img(ADMIN_STYLE_PATH . "images/icn_trash.png"), $attrDelete) .                        anchor("admin/newsletter_abonati/editeaza/{$item['id']}", img(ADMIN_STYLE_PATH . "images/icn_edit.png")) .                         form_hidden('id_edit[]', $item['id']),                    'width' => '50'                )            );            $this->table->add_row($row);            $k++;        }        if ($k > 1) {            $row = '<tfoot>               <tr>                <td>                    <input type="checkbox" id="check_all" onclick="return updateCheckAll()" />                </td>                <td colspan="5">                    <input type="submit" name="sterge" value="Sterge" onclick="return confirm(\'Esti sigur ca vrei sa stergi newsletterle selectate?\')" />                </td>            </tfoot>            </table>';                        $data['tabelDate'] = $this->table->generate();            $data['tabelDate'] = str_replace( '</table>', $row, $data['tabelDate'] );        } else {            $data['warning'] = "Nici un abonat la newsletter gasit. " . anchor('admin/newsletter_abonati/adauga', 'Adaug&#259; unul');        }                $data['breadcrumbs'] = array(                array(                    "link" => "",                    "titlu" => "Abonati newsletter",                    "class" => "current",                ),            );        $data["page_view"] = "newsletter_abonati";        $this->load->library('admin/display', $data);    }        public function sterge_abonati( $data = array() ) {        $p = $this->input->post();        if( isset( $p['id'] ) ) {            foreach ($p['id'] as $id) {                $this->db->delete('newsletters_abonati', array('id' => $id));            }            $data['succes'] = "Abonatii selectati au fost stersi cu succes.";        } else {            $data['warning'] = "Nu ati selectat nici un abonat.";        }                return $data;    }       function adauga( $data = array() ) {        $data['options_activ'] = array(            1 => "DA",            0 => "NU"        );                $data['breadcrumbs'] = array(                array(                    "link" => site_url("admin/newsletter_abonati"),                    "titlu" => "Abonati newsletter"                ),                array(                    "link" => "",                    "titlu" => "Adaug&#259; abonat",                    "class" => "current",                ),            );        $data["page"] = "newsletter_abonati_edit";        $data["page_view"] = "newsletter_abonati_edit";        $this->load->library('admin/display', $data);            }        function editeaza( $id, $data = array() ) {                $data['options_activ'] = array(            1 => "DA",            0 => "NU"        );                $data['item'] = $this->newsletterm->get_abonat( $id );        $data['breadcrumbs'] = array(                array(                    "link" => site_url("admin/newsletter_abonati"),                    "titlu" => "Abonati newsletter"                ),                array(                    "link" => site_url("admin/newsletter_abonati/editeaza/{$id}"),                    "titlu" => "Editeaz&#259; newsletter",                    "class" => "current",                ),            );        $data["page"] = "newsletter_abonati_edit";        $data["page_view"] = "newsletter_abonati_edit";        $this->load->library('admin/display', $data);            }    public function salveaza( $id = 0 ) {        $data = array();        $this->load->library('form_validation');        $this->form_validation->set_rules('nume', 'Nume', 'trim|required|xss_clean');        $this->form_validation->set_rules('email', 'Email', 'trim|required|valid_email|xss_clean');        $this->form_validation->set_rules('activ', 'Activ', 'trim|required|numeric');        if ($this->form_validation->run() == TRUE) {            $p = $this->input->post();            if( $id == 0 ) {                $this->db->set('nume', $p['nume']);                $this->db->set('email', $p['email']);                $this->db->set('activ', $p['activ']);                if( $this->db->insert( 'newsletters_abonati' ) ) {                    $data['succes'] = "Abonatul a fost salvat cu succes.";                    $this->form_validation->_field_data = array();                }            } else {                $this->db->set('nume', $p['nume']);                $this->db->set('email', $p['email']);                $this->db->set('activ', $p['activ']);                $this->db->where('id', $id);                if( $this->db->update( 'newsletters_abonati' ) ) {                    $data['succes'] = "Newsletterul a fost salvat cu succes.";                    $this->form_validation->_field_data = array();                }            }        }        if( $id==0 ) {            $this->adauga($data);        } else {            $this->editeaza( $id, $data );        }    }        public function sterge( $id ) {        $this->db->delete( 'newsletters_abonati', array('id'=>$id) );        $data["succes"] = "Abonatul a fost sters cu succes.";        $this->index( $data );    }        public function export_txt() {        header("Content-Disposition: attachment; filename=abonati-newsletter-". date('d-m-Y') .".txt");        header("Content-type: text/plain");        header("Pragma: public");        header("Cache-Control: must-revalidate, post-check=0, pre-check=0");               $abonati = $this->newsletterm->get_newsletter_abonati();        foreach ($abonati as $item) {            echo "{$item['nume']}|{$item['email']}\r\n";        }                exit;    }        public function import_txt() {       $data = array();        $p = $this->input->post();                $config['upload_path'] = dirname(__FILE__) . "/csv/import/";        $config['allowed_types'] = 'txt';        $this->load->library('upload', $config);        if ($this->upload->do_upload( 'fisier_txt' )) {            $uploaded_data = $this->upload->data();            $fisier = $config['upload_path'] . $uploaded_data['file_name'];                        $handle = fopen($fisier, "r");                        if ($handle) {                $k = 1;                $warning = "";                while (($line = fgets($handle)) !== false) {                    $line = trim( $line );                                        if( $line=="" ) {                        $warning .= "Eroare la linia {$k}: nici o informatie gasita.<br />";                    } elseif( !preg_match('/.*\|.*/', $line) ) {                        $warning .= "Eroare la linia {$k}: linia trebuie sa fie de forma: \"NUME:ADRESA DE EMAIL\".<br />";                    } else {                        list($nume, $email) = explode("|", $line);                        $nume = trim($nume);                        $email = trim($email);                                                if( !preg_match('/^[_a-z0-9-]+(\.[_a-z0-9-]+)*@[a-z0-9-]+(\.[a-z0-9-]+)*(\.[a-z]{2,3})$/', $email) ) {                            $warning .= "Eroare la linia {$k}: adresa de email: \"{$email}\" nu este valida.<br />";                        } else {                            $this->db->set("nume", $nume);                            $this->db->set("email", $email);                            if( $this->db->insert("newsletters_abonati") ) {                                $warning .= "Succes: Abonatul {$nume} ({$email}) a fost adaugat cu succes.<br />";                            }                        }                    }                    $k++;                }                if( $warning!="" ) {                    $this->session->set_flashdata('warning', $warning);                }            }                        fclose($handle);        } else {            $this->session->set_flashdata('error', $this->upload->display_errors());        }                redirect("admin/newsletter_abonati");    }}